#!/usr/bin/env node
const program = require('commander');
const rootPath = process.cwd();
const fs = require('fs-extra');
const path = require('path');
const log = require('../src/lib/log');
const server = require('../src/server/index');
const update = require('../src/update');
// program.usage('<port>').parse(process.argv)
program
    // .usage('[options] <file ...>')
    .option('-p,--port <n>', '端口号')
    .option('-c,--config <n>', '配置文件')
    .parse(process.argv)

const args = program.args
const { port, config = 'wtmfront.config.js' } = program;
// 判断项目是否存在
if (fs.pathExistsSync(path.join(rootPath, 'package.json'))) {
    const wtmconfig = path.join(rootPath, config);
    if (fs.pathExistsSync(wtmconfig)) {
        start(wtmconfig);
    } else {
        return log.error(`找不到 配置文件~ file:${config} `);
    }
} else {
    return log.error(`找不到项目~`);
}
async function start(wtmconfig) {
    const swagger = path.join(rootPath, 'wtmfront', 'swagger', 'dist', 'index.html');
    wtmconfig = require(wtmconfig);
    if (fs.pathExistsSync(swagger)) {
        new server(rootPath, config).init(port || wtmconfig.serverPort || 8765);
    } else {
        log.warning("没有找到 swagger 模块，等待更新")
        await new update({ modular: "swagger" }).create();
        new server(rootPath, config).init(port || wtmconfig.serverPort || 8765);
    }
}
